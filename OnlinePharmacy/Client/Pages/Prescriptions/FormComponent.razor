@inject HttpClient _client

<EditForm Model="@prescription" OnValidSubmit="OnValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <fieldset disabled="@Disabled">
        <div class="form-group">
            <label>Customer: </label>
            <div>
                <InputSelect @bind-Value="prescription.CustomerId" class="form-control">
                    <option value="">-- Select Customer --</option>
                    @if (Customers != null)
                    {
                        foreach (var customer in Customers)
                        {
                            <option value="@customer.Id">@customer.Username </option>
                        }
                    }
                </InputSelect>
                <ValidationMessage For="@(() => prescription.CustomerId)" />
            </div>
        </div>

        <div class="form-group">
            <label>Prescription Date: </label>
            <div>
                <InputDate @bind-Value="@prescription.DateOut" class="form-control" />
                <ValidationMessage For="@(() => prescription.DateOut)" />
            </div>
        </div>

        <div class="form-group">
            <label>Details: </label>
            <div>
                <InputText @bind-Value="@prescription.Prescription_Details" class="form-control" />
                <ValidationMessage For="@(() => prescription.Prescription_Details)" />
            </div>
        </div>
    </fieldset>

    <br />
    <br />

    @if (!Disabled)
    {
        <button type="submit" class="btn btn-success btn-block">
            @ButtonText
        </button>
    }
</EditForm>

@code {
    [Parameter] public bool Disabled { get; set; } = false;
    [Parameter] public Prescription? prescription { get; set; }
    [Parameter] public string ButtonText { get; set; } = "Save";
    [Parameter] public EventCallback OnValidSubmit { get; set; }

    private IList<Customer>? Customers;

    protected async override Task OnInitializedAsync()
    {
        Customers = await _client.GetFromJsonAsync<List<Customer>>($"{Endpoints.CustomersEndpoint}");
    }
}
